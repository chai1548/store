<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ပစ္စည်းပို့ဆောင်ရေး</title>
    <style>
        /* General Styles */
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f9f9f9;
        }

        /* Top Bar */
        .top-bar {
            position: sticky;
            top: 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 20px;
            background-color: #4267B2; /* Facebook blue */
            color: white;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
            z-index: 1000;
            transition: all 0.3s ease;
        }

        .top-bar.collapsed {
            padding: 5px 20px;
            background-color: #333; /* Dark background when collapsed */
        }

        .search-box {
            flex: 1;
            max-width: 500px;
            padding: 10px;
            font-size: 16px;
            border: 1px solid #ccc;
            border-radius: 5px;
            margin-right: 20px;
            transition: all 0.3s ease;
        }

        .icons {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .icons img {
            width: 30px;
            height: 30px;
            cursor: pointer;
            transition: transform 0.2s ease;
        }

        .icons img:hover {
            transform: scale(1.1);
        }

        /* Menu Icon */
        .menu-icon {
            width: 30px;
            height: 30px;
            cursor: pointer;
            transition: transform 0.2s ease;
            filter: brightness(0) invert(1); /* Convert icon to white */
        }

        .menu-icon:hover {
            transform: scale(1.1);
        }

        /* Auto Chat Button */
        .chat-button {
            background-color: #4267B2;
            color: white;
            padding: 10px;
            font-size: 16px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .chat-button:hover {
            background-color: #365899;
        }

        /* Popup Menu */
        .popup {
            display: none;
            position: absolute;
            background-color: white;
            border: 1px solid #ccc;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            z-index: 1000;
            padding: 10px;
            border-radius: 5px;
        }

        .popup button {
            display: block;
            width: 100%;
            padding: 10px;
            margin: 5px 0;
            text-align: left;
            background: none;
            border: none;
            cursor: pointer;
        }

        .popup button:hover {
            background-color: #f1f1f1;
        }

        /* Bottom Sheet */
        .bottom-sheet {
            display: none;
            position: fixed;
            bottom: 0;
            left: 0;
            width: 100%;
            background-color: white;
            box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);
            z-index: 1001;
            padding: 20px;
            border-top-left-radius: 10px;
            border-top-right-radius: 10px;
        }

        .bottom-sheet input,
        .bottom-sheet textarea {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .bottom-sheet button {
            padding: 10px 20px;
            margin: 5px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .bottom-sheet button.primary {
            background-color: #4267B2;
            color: white;
        }

        .bottom-sheet button.secondary {
            background-color: #ccc;
            color: black;
        }

        /* Posts Grid Container */
        .posts-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 15px;
            padding: 20px;
        }

        .post-card {
            border: 1px solid #ccc;
            padding: 15px;
            border-radius: 5px;
            background: #fff;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            transition: transform 0.2s ease;
        }

        .post-card:hover {
            transform: translateY(-5px);
        }

        .post-image {
            width: 100%;
            height: 150px;
            object-fit: cover;
            border-radius: 5px;
            margin: 5px 0;
            cursor: pointer;
        }

        .timestamp {
            color: #666;
            font-size: 0.9em;
        }

        .post-body {
            color: #333;
            margin: 10px 0;
        }

        .like-btn, .comment-btn, .share-btn {
            cursor: pointer;
            margin-right: 10px;
            display: inline-flex;
            align-items: center;
            gap: 5px;
        }

        .like-btn { color: #ff0000; }
        .comment-btn { color: #007bff; }
        .share-btn { color: #28a745; }

        .post-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }

        .post-header h3 { 
            margin: 0;
            font-size: 1.1em;
        }

        .post-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 10px;
            border-top: 1px solid #eee;
            padding-top: 10px;
        }

        .post-footer .actions {
            display: flex;
            align-items: center;
        }

        /* Modal for Full Image View */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.9);
        }

        .modal-content {
            display: block;
            margin: auto;
            max-width: 90%;
            max-height: 80%;
            margin-top: 5%;
        }

        /* Floating Action Button */
        .fab-container {
            position: fixed;
            bottom: 30px;
            right: 30px;
            z-index: 999;
        }

        .fab {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background-color: #4267B2;
            color: white;
            border: none;
            font-size: 24px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }

        .fab:hover {
            background-color: #365899;
            transform: scale(1.1);
        }

        .fab.create-post svg {
            width: 30px;
            height: 30px;
            stroke: white;
        }

        /* Toast Message */
        .toast {
            position: fixed;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            background-color: #333;
            color: white;
            padding: 10px 20px;
            border-radius: 5px;
            z-index: 1002;
            display: none;
        }

        /* Like Animation */
        @keyframes heartBeat {
            0% { transform: scale(1); }
            14% { transform: scale(1.3); }
            28% { transform: scale(1); }
            42% { transform: scale(1.3); }
            70% { transform: scale(1); }
        }

        .liked {
            animation: heartBeat 1s;
            color: #ff0000;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .posts-grid {
                grid-template-columns: 1fr;
            }
            
            .top-bar {
                flex-direction: column;
                align-items: stretch;
            }
            
            .search-box {
                margin-right: 0;
                margin-bottom: 10px;
            }
            
            .icons {
                justify-content: flex-end;
            }
        }
    </style>
</head>
<body>
    <!-- Top Bar -->
    <div class="top-bar" id="topBar">
        <input type="text" id="searchInput" class="search-box" placeholder="Search posts by description..." onkeyup="filterPosts()">
        <div class="icons">
            <div class="menu">
                <img src="https://cdn-icons-png.flaticon.com/512/56/56763.png" alt="Menu Icon" class="menu-icon" onclick="showPopup()">
                <div id="popupMenu" class="popup">
                    <button onclick="openAbout()">About</button>
                    <button onclick="openRequest()">Request</button>
                    <button onclick="openSettings()">Settings</button>
                    <button onclick="openReport()">Report</button>
                </div>
            </div>
            <a href="https://www.facebook.com/share/1J6xHC36Fz/" target="_blank">
                <img src="https://upload.wikimedia.org/wikipedia/commons/5/51/Facebook_f_logo_%282019%29.svg" alt="Facebook Icon">
            </a>
            <img src="https://upload.wikimedia.org/wikipedia/commons/4/41/LINE_logo.svg" alt="Line Icon" onclick="alert('Line Icon Clicked')">
            <!-- Auto Chat Button -->
            <button class="chat-button" onclick="window.location.href='chat.html'">
                <img src="https://cdn-icons-png.flaticon.com/512/134/134914.png" alt="Chat Icon" class="menu-icon">
            </button>
        </div>
    </div>

    <h1 style="margin: 20px;">ထိုင်းမြန်မာပစ္စည်းပို့ဆောင်ရေး</h1>

    <div class="posts-grid" id="posts-container"></div>

    <!-- Full Image View Modal -->
    <div id="imageModal" class="modal">
        <span class="close" onclick="closeModal()">&times;</span>
        <img class="modal-content" id="modalImage">
    </div>

    <!-- Bottom Sheets -->
    <div id="aboutSheet" class="bottom-sheet">
        <h2>About</h2>
        <p>This is the about section.</p>
        <button class="primary" onclick="joinWhatsApp()">Join WhatsApp Group</button>
        <button class="secondary" onclick="sendEmail()">Send Email</button>
        <button class="secondary" onclick="closeBottomSheet('aboutSheet')">Close</button>
    </div>

    <div id="requestSheet" class="bottom-sheet">
        <h2>Request</h2>
        <input id="requestName" type="text" placeholder="Enter Your Name">
        <textarea id="requestDetails" placeholder="Enter Request Details"></textarea>
        <button class="primary" onclick="submitRequest()">Submit</button>
        <button class="secondary" onclick="closeBottomSheet('requestSheet')">Cancel</button>
    </div>

    <div id="reportSheet" class="bottom-sheet">
        <h2>Report</h2>
        <input id="reportEmail" type="email" placeholder="Enter Your Email">
        <textarea id="reportDetails" placeholder="Enter Report Details"></textarea>
        <button class="primary" onclick="submitReport()">Submit</button>
        <button class="secondary" onclick="closeBottomSheet('reportSheet')">Cancel</button>
    </div>

    <!-- Floating Create Post Button -->
    <div class="fab-container">
        <button class="fab create-post" onclick="window.location.href='upload.html'">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <line x1="12" y1="5" x2="12" y2="19"></line>
                <line x1="5" y1="12" x2="19" y2="12"></line>
            </svg>
        </button>
    </div>

    <!-- Toast Message -->
    <div id="toast" class="toast"></div>

    <script>
        // Firebase URLs
        const firebasePostsUrl = "https://onlineshop-849c8.firebaseio.com/posts.json";
        const firebaseLikesUrl = "https://onlineshop-849c8.firebaseio.com/likes.json";
        let allPosts = [];
        let currentImageUrl = '';
        let likedPosts = JSON.parse(localStorage.getItem('likedPosts') || '{}');

        // Fetch Posts
        async function fetchPosts() {
            try {
                const response = await fetch(firebasePostsUrl);
                if (!response.ok) throw new Error("Failed to fetch posts");
                const data = await response.json();
                if (!data) {
                    document.getElementById('posts-container').innerHTML = '<div class="post-card">No posts found.</div>';
                    return;
                }
                
                // Fetch likes for each post
                const likesResponse = await fetch(firebaseLikesUrl);
                const likesData = likesResponse.ok ? await likesResponse.json() : {};
                
                allPosts = Object.keys(data).map(key => {
                    let post = data[key];
                    let imagesArray = post.data ? JSON.parse(post.data) : [];
                    const postLikes = likesData[key] || {};
                    const likeCount = Object.keys(postLikes).length;
                    
                    return {
                        postId: key,
                        description: post.description || 'No Description',
                        timestamp: post.post_timestamp ? new Date(parseInt(post.post_timestamp)).toLocaleString() : 'No Timestamp',
                        postBody: post.post_body || '',
                        totalLikes: likeCount,
                        totalComments: parseInt(post.comments) || 0,
                        totalShares: post.total_shares || 0,
                        images: imagesArray,
                        posttime: post.posttime || 'No Post Time',
                        isLiked: likedPosts[key] || false
                    };
                });
                
                displayPosts(allPosts);
            } catch (error) {
                console.error("Error fetching posts:", error);
                document.getElementById('posts-container').innerHTML = '<div class="post-card">Error fetching posts.</div>';
            }
        }

        // Display Posts in Grid
        function displayPosts(posts) {
            const postsContainer = document.getElementById('posts-container');
            postsContainer.innerHTML = '';
            
            if (posts.length === 0) {
                postsContainer.innerHTML = '<div class="post-card">No posts available.</div>';
                return;
            }
            
            posts.forEach(post => {
                const postElement = document.createElement('div');
                postElement.className = 'post-card';
                
                let imagesHtml = post.images.length > 0 ?
                    `<div class="image-container">
                        <img src="${post.images[0]}" alt="Post Image" class="post-image" onclick="openModal('${post.images[0]}')">
                    </div>` :
                    '<p>No image available</p>';
                
                postElement.innerHTML = `
                    <div class="post-header">
                        <h3>Ko Sai</h3>
                        <div class="timestamp">${post.timestamp}</div>
                    </div>
                    <p>${post.description}</p>
                    ${imagesHtml}
                    <p class="post-body">${post.postBody || ''}</p>
                    <div class="post-footer">
                        <div class="actions">
                            <span class="like-btn ${post.isLiked ? 'liked' : ''}" 
                                  onclick="toggleLike('${post.postId}', this)">
                                ❤️ ${post.totalLikes}
                            </span>
                            <span class="comment-btn" onclick="viewComments('${post.postId}')">
                                💬 ${post.totalComments}
                            </span>
                            <span class="share-btn" onclick="sharePost('${post.postId}')">
                                🔄 ${post.totalShares}
                            </span>
                        </div>
                    </div>
                `;
                postsContainer.appendChild(postElement);
            });
        }

        // Toggle Like
        async function toggleLike(postId, element) {
            const userId = localStorage.getItem('userId') || generateUserId();
            localStorage.setItem('userId', userId);
            
            try {
                // Update local state immediately for responsive UI
                const isLiked = !likedPosts[postId];
                likedPosts[postId] = isLiked;
                localStorage.setItem('likedPosts', JSON.stringify(likedPosts));
                
                // Update UI
                element.classList.toggle('liked', isLiked);
                const likeCountElement = element.querySelector('span') || element;
                const currentCount = parseInt(likeCountElement.textContent.match(/\d+/)[0]) || 0;
                likeCountElement.textContent = `❤️ ${isLiked ? currentCount + 1 : currentCount - 1}`;
                
                // Update Firebase
                const likeUrl = `${firebaseLikesUrl.replace('.json', '')}/${postId}/${userId}.json`;
                const method = isLiked ? 'PUT' : 'DELETE';
                
                await fetch(likeUrl, {
                    method: method,
                    body: isLiked ? JSON.stringify(true) : null
                });
                
                showToast(isLiked ? 'Post liked!' : 'Like removed');
                
            } catch (error) {
                console.error("Error toggling like:", error);
                showToast('Error updating like');
            }
        }

        // Generate unique user ID
        function generateUserId() {
            return 'user_' + Math.random().toString(36).substr(2, 9);
        }

        // Search by Description
        function filterPosts() {
            const searchValue = document.getElementById('searchInput').value.toLowerCase();
            const filteredPosts = allPosts.filter(post => 
                post.description.toLowerCase().includes(searchValue) ||
                (post.postBody && post.postBody.toLowerCase().includes(searchValue))
            );
            displayPosts(filteredPosts);
        }

        // View Comments
        function viewComments(postId) {
            window.location.href = `comments.html?postId=${postId}`;
        }

        // Share Post
        function sharePost(postId) {
            const post = allPosts.find(p => p.postId === postId);
            if (post) {
                const shareUrl = `https://example.com/post/${postId}`;
                const shareText = `${post.description}\n\n${shareUrl}`;
                
                if (navigator.share) {
                    navigator.share({
                        title: 'Check out this post',
                        text: post.description,
                        url: shareUrl
                    }).catch(err => {
                        console.log('Error sharing:', err);
                        copyToClipboard(shareText);
                    });
                } else {
                    copyToClipboard(shareText);
                }
            }
        }

        // Copy to Clipboard
        function copyToClipboard(text) {
            navigator.clipboard.writeText(text).then(() => {
                showToast('Link copied to clipboard!');
            }).catch(err => {
                console.error('Could not copy text: ', err);
                showToast('Failed to copy link');
            });
   
